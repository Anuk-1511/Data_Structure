#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    template <typename T>

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
            {
                delete left;
            }
            if (right)
            {
                delete right;
            }
        }
    };

*************************************************************/

pair<int,int> predecessorSuccessor(BinaryTreeNode<int>* root, int key)
{
    // Write your code here.

    BinaryTreeNode<int>* temp = root;
    int pre = -1;
    int suc = -1;
    while(temp->data != key)
    {
      if (temp->data > key) {
        suc = temp->data;
        temp = temp->left;
        
      }
      else
      {
          pre = temp->data;
          temp = temp->right;
          
      }
    }

    BinaryTreeNode<int>* leftt = temp->left;
    while(leftt != NULL)
    {
        pre = leftt->data;
        leftt = leftt->right;
    }

    BinaryTreeNode<int>* rightt = temp->right;
    while(rightt != NULL)
    {
        suc = rightt->data;
        rightt = rightt->left;
    }

    pair<int,int> ans = make_pair(pre,suc);
    return ans;
}
