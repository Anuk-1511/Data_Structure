class Solution
{
    public:
    //Function to find the vertical order traversal of Binary Tree.
    vector<int> verticalOrder(Node *root)
    {
        //Your code here
        
        map<int, map<int,vector<int> > > nodes;
        queue<pair<Node* , pair<int,int> > >q;
        
        vector<int> ans;
        if(root == NULL)
          return ans;
          
        q.push(make_pair(root,make_pair(0,0)));
        
        while(!q.empty())
        {
            pair<Node*, pair<int,int> > temp = q.front();
            q.pop();
            Node* f = temp.first;
            int hd = temp.second.first;
            
            int lvl = temp.second.second;
            
            nodes[hd][lvl].push_back(f->data);
            
            if(f->left)
            {
                q.push(make_pair(f->left, make_pair(hd-1,lvl+1) ) );
            }
            if(f->right)
            {
                q.push(make_pair(f->right,make_pair(hd+1,lvl+1) ) );
            }
        }
     for(auto i: nodes)
        {
             for(j: i.second)
             {
                 for(auto k:j.second)
                 {
                     ans.push_back(k);
                 }
             }
        }
        return ans;
    }
};
