class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
        //Your code here
        
        vector<int> ans;
        if(root == NULL)
        {
            return ans;
        }
        
        map<int,int> t;
        queue<pair<Node* , int> > q;
        
        q.push(make_pair(root,0));
        
        while(!q.empty())
        {
            pair<Node* ,int> temp = q.front();
            q.pop();
            Node* f = temp.first;
            
            int hd = temp.second;
            
            if(t.find(hd) == t.end())
               t[hd] = f->data;
            
            if(f->left)
               q.push(make_pair(f->left,hd-1));
               
            if(f->right)
              q.push(make_pair(f->right,hd+1));
        }
        
        for(auto i: t)
          {
              ans.push_back(i.second);
          }
          return ans;
    }

};
