#include <bits/stdc++.h> 

bool isafe(int r ,int c,vector<vector<int>>& board,int val)
{
    for(int i =0; i<board.size();i++)
    {
        if(board[r][i] == val || board[i][c] == val ||
              (board[3*(r/3) + i/3][3*(c/3) + i%3] == val))
        {return false;}

    }
    return true;
}
bool solve(vector<vector<int>>& board){

    int n = board[0].size();

    for(int row= 0;row <n; row++)
    {
        for(int col =0; col<n;col++)
        {
            if(board[row][col] == 0){
                for(int val =1;val<=9;val++){
                    if(isafe(row,col,board,val)){
                       board[row][col] = val;
                    
                    bool a = solve(board);
                    if(a)
                    {
                        return true;
                    } 
                    else 
                    {
                      board[row][col] = 0;
                    }
                  }
                }
                 return false;
            }
           
        }
    }
    return true;
}
void solveSudoku(vector<vector<int>>& sudoku)
{
	// Write your code here
    // No need to print the final sudoku
    // Just fill the values in the given matrix
      

      solve(sudoku);
       

}
