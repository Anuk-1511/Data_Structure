#include <bits/stdc++.h> 
int partition(vector<int>& arr,int s,int e)
{

    int pivot = arr[s];

    int count = 0;
    for(int i = s+1;i<=e;i++)
    {
        if(arr[i]<=pivot)
        {
            count++;
        }
    }

    int pivotindex = s + count;

    swap(arr[pivotindex],arr[s]);

    //left and right

    int i=s;
    int j=e;

    while(i<pivotindex && j>pivotindex)
    {
        while(arr[i] <= pivot)
        {
            i++;
        }

        while(arr[j] > pivot)
        {
            j--;
        }
        if(i<pivotindex && j>pivotindex)
        {
            swap(arr[i++],arr[j--]);
            
        }
    }
    return pivotindex;
}
void quick(vector<int>& arr,int s,int e)
{

   if(s>=e)
   {
    return;
   }

   int p = partition(arr,s,e);

   quick(arr,s,p-1);

   quick(arr,p+1,e);
}
vector<int> quickSort(vector<int> arr)
{
    // Write your code here.
     quick(arr,0,arr.size()-1);
    return arr;
}
