#include<bits/stdc++.h>
void dfs(int node,unordered_map<int,bool> &vi,
           unordered_map<int,list<int> > &adj,vector<int> &com)
{
    com.push_back(node);
    vi[node] = true;

    for(auto i: adj[node])
    {
        if(!vi[i])
        {
            dfs(i,vi,adj,com);
        }
    }
}

vector<vector<int>> depthFirstSearch(int V, int E, vector<vector<int>> &edges)
{
    // Write your code here
    unordered_map<int, list<int> > adj;
    for(int  i=0;i<edges.size();i++)
    {
        int u = edges[i][0];
        int v = edges[i][1];

        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    vector<vector<int> > ans;
    unordered_map<int,bool> vi;
    for(int i= 0;i<V;i++)
    {
        if(!vi[i])
        {
            vector<int> com;
            dfs(i,vi,adj,com);
            ans.push_back(com);

        }
    }
      return ans;
}
